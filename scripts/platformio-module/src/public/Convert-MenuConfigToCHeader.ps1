

<#
.SYNOPSIS
    Converts an SdkConfig file generated by menuconfig (.config) into an includable C header file
#>
Function Convert-MenuConfigToCHeader {
    [CmdletBinding()]
    Param (
        [Parameter(Mandatory)]
        [ValidateScript({ Test-Path $_ })]
        [string] $InputFile,
        # -----------------------------------
        [Parameter(Mandatory)]
        [ValidateNotNullOrWhiteSpace()]
        [string] $OutputFile,
        # -----------------------------------
        [Parameter()]
        [string] $IncludeGuard = "SDKCONFIG_$([guid]::NewGuid().Guid.Replace('-',''))"
    )

    # The prefix menuconfig uses to prefix config values
    New-Variable -Option Constant VariablePrefix 'CONFIG_'
    # Unique string to prevent duplicate including of the same header file (manual #pragma once)

    @"
// -----------------------------------------------------------------------
// This is generated code, do not edit unless you know what you are doing!
// -----------------------------------------------------------------------

#ifndef $IncludeGuard
#define $IncludeGuard

"@ | Tee-Object -FilePath $OutputFile
    
    Get-Content $InputFile | ForEach-Object {
        $Line = $_
        
        # shell comment to C comments
        $Line = $Line -replace '^#', '//'
        
        # match anything except '=' until the first occurance of '=' and call it <symbol>
        # then match anything after the = and call it <value>
        $validAssignOperation = $Line -match '^( )*(?<comment>(//)?)( )*(?<symbol>[^=]*)=(?<value>.+)$'
        if ($validAssignOperation) {
            $Comment = $Matches.comment
            $Symbol = $Matches.symbol
            $Value = $Matches.value
            "$Comment #ifndef $Symbol".TrimStart()
            "$Comment #define $Symbol $Value".TrimStart()
            "$Comment #endif".TrimStart()
            ""
        }
        else {
            $CommentedLine = $Line -match '^( )*//'
            if ($CommentedLine) {
                # keep comments intact
                Write-Output $Line
            }
        }
    } | Tee-Object -Append -FilePath $OutputFile

    "#endif`n"  | Tee-Object -Append -FilePath $OutputFile
}